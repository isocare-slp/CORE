//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Saving.Applications.fund.ws_sl_fundcoll_payment_ctrl {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSet1")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSet1 : global::System.Data.DataSet {
        
        private FUNDCOLLMASTERDataTable tableFUNDCOLLMASTER;
        
        private FUNDCOLLSTATEMENTDataTable tableFUNDCOLLSTATEMENT;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DataSet1() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected DataSet1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["FUNDCOLLMASTER"] != null)) {
                    base.Tables.Add(new FUNDCOLLMASTERDataTable(ds.Tables["FUNDCOLLMASTER"]));
                }
                if ((ds.Tables["FUNDCOLLSTATEMENT"] != null)) {
                    base.Tables.Add(new FUNDCOLLSTATEMENTDataTable(ds.Tables["FUNDCOLLSTATEMENT"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FUNDCOLLMASTERDataTable FUNDCOLLMASTER {
            get {
                return this.tableFUNDCOLLMASTER;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FUNDCOLLSTATEMENTDataTable FUNDCOLLSTATEMENT {
            get {
                return this.tableFUNDCOLLSTATEMENT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DataSet1 cln = ((DataSet1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["FUNDCOLLMASTER"] != null)) {
                    base.Tables.Add(new FUNDCOLLMASTERDataTable(ds.Tables["FUNDCOLLMASTER"]));
                }
                if ((ds.Tables["FUNDCOLLSTATEMENT"] != null)) {
                    base.Tables.Add(new FUNDCOLLSTATEMENTDataTable(ds.Tables["FUNDCOLLSTATEMENT"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableFUNDCOLLMASTER = ((FUNDCOLLMASTERDataTable)(base.Tables["FUNDCOLLMASTER"]));
            if ((initTable == true)) {
                if ((this.tableFUNDCOLLMASTER != null)) {
                    this.tableFUNDCOLLMASTER.InitVars();
                }
            }
            this.tableFUNDCOLLSTATEMENT = ((FUNDCOLLSTATEMENTDataTable)(base.Tables["FUNDCOLLSTATEMENT"]));
            if ((initTable == true)) {
                if ((this.tableFUNDCOLLSTATEMENT != null)) {
                    this.tableFUNDCOLLSTATEMENT.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DataSet1";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSet1.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableFUNDCOLLMASTER = new FUNDCOLLMASTERDataTable();
            base.Tables.Add(this.tableFUNDCOLLMASTER);
            this.tableFUNDCOLLSTATEMENT = new FUNDCOLLSTATEMENTDataTable();
            base.Tables.Add(this.tableFUNDCOLLSTATEMENT);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeFUNDCOLLMASTER() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeFUNDCOLLSTATEMENT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSet1 ds = new DataSet1();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void FUNDCOLLMASTERRowChangeEventHandler(object sender, FUNDCOLLMASTERRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void FUNDCOLLSTATEMENTRowChangeEventHandler(object sender, FUNDCOLLSTATEMENTRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FUNDCOLLMASTERDataTable : global::System.Data.TypedTableBase<FUNDCOLLMASTERRow> {
            
            private global::System.Data.DataColumn columnCOOP_ID;
            
            private global::System.Data.DataColumn columnMEMBER_NO;
            
            private global::System.Data.DataColumn columnFUNDKEEPTYPE;
            
            private global::System.Data.DataColumn columnAPPROVE_DATE;
            
            private global::System.Data.DataColumn columnFUND_STATUS;
            
            private global::System.Data.DataColumn columnRESIGN_DATE;
            
            private global::System.Data.DataColumn columnFUNDBALANCE;
            
            private global::System.Data.DataColumn columnLASTSTM_NO;
            
            private global::System.Data.DataColumn columnLASTACCESS_DATE;
            
            private global::System.Data.DataColumn columnfullname;
            
            private global::System.Data.DataColumn columnMEMBGROUP_CODE;
            
            private global::System.Data.DataColumn columnSLIPTYPE_CODE;
            
            private global::System.Data.DataColumn columnSLIP_DATE;
            
            private global::System.Data.DataColumn columnOPERATE_DATE;
            
            private global::System.Data.DataColumn columnMONEYTYPE_CODE;
            
            private global::System.Data.DataColumn columnEXPENSE_BANK;
            
            private global::System.Data.DataColumn columnEXPENSE_BRANCH;
            
            private global::System.Data.DataColumn columnEXPENSE_ACCID;
            
            private global::System.Data.DataColumn columnTOFROM_ACCID;
            
            private global::System.Data.DataColumn columnDOCUMENT_NO;
            
            private global::System.Data.DataColumn columnPAYOUTNET_AMT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FUNDCOLLMASTERDataTable() {
                this.TableName = "FUNDCOLLMASTER";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FUNDCOLLMASTERDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected FUNDCOLLMASTERDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COOP_IDColumn {
                get {
                    return this.columnCOOP_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MEMBER_NOColumn {
                get {
                    return this.columnMEMBER_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FUNDKEEPTYPEColumn {
                get {
                    return this.columnFUNDKEEPTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn APPROVE_DATEColumn {
                get {
                    return this.columnAPPROVE_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FUND_STATUSColumn {
                get {
                    return this.columnFUND_STATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RESIGN_DATEColumn {
                get {
                    return this.columnRESIGN_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FUNDBALANCEColumn {
                get {
                    return this.columnFUNDBALANCE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LASTSTM_NOColumn {
                get {
                    return this.columnLASTSTM_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LASTACCESS_DATEColumn {
                get {
                    return this.columnLASTACCESS_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fullnameColumn {
                get {
                    return this.columnfullname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MEMBGROUP_CODEColumn {
                get {
                    return this.columnMEMBGROUP_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SLIPTYPE_CODEColumn {
                get {
                    return this.columnSLIPTYPE_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SLIP_DATEColumn {
                get {
                    return this.columnSLIP_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OPERATE_DATEColumn {
                get {
                    return this.columnOPERATE_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MONEYTYPE_CODEColumn {
                get {
                    return this.columnMONEYTYPE_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EXPENSE_BANKColumn {
                get {
                    return this.columnEXPENSE_BANK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EXPENSE_BRANCHColumn {
                get {
                    return this.columnEXPENSE_BRANCH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EXPENSE_ACCIDColumn {
                get {
                    return this.columnEXPENSE_ACCID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TOFROM_ACCIDColumn {
                get {
                    return this.columnTOFROM_ACCID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DOCUMENT_NOColumn {
                get {
                    return this.columnDOCUMENT_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PAYOUTNET_AMTColumn {
                get {
                    return this.columnPAYOUTNET_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FUNDCOLLMASTERRow this[int index] {
                get {
                    return ((FUNDCOLLMASTERRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FUNDCOLLMASTERRowChangeEventHandler FUNDCOLLMASTERRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FUNDCOLLMASTERRowChangeEventHandler FUNDCOLLMASTERRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FUNDCOLLMASTERRowChangeEventHandler FUNDCOLLMASTERRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FUNDCOLLMASTERRowChangeEventHandler FUNDCOLLMASTERRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddFUNDCOLLMASTERRow(FUNDCOLLMASTERRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FUNDCOLLMASTERRow AddFUNDCOLLMASTERRow(
                        string COOP_ID, 
                        string MEMBER_NO, 
                        string FUNDKEEPTYPE, 
                        System.DateTime APPROVE_DATE, 
                        decimal FUND_STATUS, 
                        System.DateTime RESIGN_DATE, 
                        decimal FUNDBALANCE, 
                        decimal LASTSTM_NO, 
                        System.DateTime LASTACCESS_DATE, 
                        string fullname, 
                        string MEMBGROUP_CODE, 
                        string SLIPTYPE_CODE, 
                        System.DateTime SLIP_DATE, 
                        System.DateTime OPERATE_DATE, 
                        string MONEYTYPE_CODE, 
                        string EXPENSE_BANK, 
                        string EXPENSE_BRANCH, 
                        string EXPENSE_ACCID, 
                        string TOFROM_ACCID, 
                        string DOCUMENT_NO, 
                        decimal PAYOUTNET_AMT) {
                FUNDCOLLMASTERRow rowFUNDCOLLMASTERRow = ((FUNDCOLLMASTERRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        COOP_ID,
                        MEMBER_NO,
                        FUNDKEEPTYPE,
                        APPROVE_DATE,
                        FUND_STATUS,
                        RESIGN_DATE,
                        FUNDBALANCE,
                        LASTSTM_NO,
                        LASTACCESS_DATE,
                        fullname,
                        MEMBGROUP_CODE,
                        SLIPTYPE_CODE,
                        SLIP_DATE,
                        OPERATE_DATE,
                        MONEYTYPE_CODE,
                        EXPENSE_BANK,
                        EXPENSE_BRANCH,
                        EXPENSE_ACCID,
                        TOFROM_ACCID,
                        DOCUMENT_NO,
                        PAYOUTNET_AMT};
                rowFUNDCOLLMASTERRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFUNDCOLLMASTERRow);
                return rowFUNDCOLLMASTERRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FUNDCOLLMASTERRow FindByCOOP_IDMEMBER_NOFUNDKEEPTYPE(string COOP_ID, string MEMBER_NO, string FUNDKEEPTYPE) {
                return ((FUNDCOLLMASTERRow)(this.Rows.Find(new object[] {
                            COOP_ID,
                            MEMBER_NO,
                            FUNDKEEPTYPE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                FUNDCOLLMASTERDataTable cln = ((FUNDCOLLMASTERDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FUNDCOLLMASTERDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCOOP_ID = base.Columns["COOP_ID"];
                this.columnMEMBER_NO = base.Columns["MEMBER_NO"];
                this.columnFUNDKEEPTYPE = base.Columns["FUNDKEEPTYPE"];
                this.columnAPPROVE_DATE = base.Columns["APPROVE_DATE"];
                this.columnFUND_STATUS = base.Columns["FUND_STATUS"];
                this.columnRESIGN_DATE = base.Columns["RESIGN_DATE"];
                this.columnFUNDBALANCE = base.Columns["FUNDBALANCE"];
                this.columnLASTSTM_NO = base.Columns["LASTSTM_NO"];
                this.columnLASTACCESS_DATE = base.Columns["LASTACCESS_DATE"];
                this.columnfullname = base.Columns["fullname"];
                this.columnMEMBGROUP_CODE = base.Columns["MEMBGROUP_CODE"];
                this.columnSLIPTYPE_CODE = base.Columns["SLIPTYPE_CODE"];
                this.columnSLIP_DATE = base.Columns["SLIP_DATE"];
                this.columnOPERATE_DATE = base.Columns["OPERATE_DATE"];
                this.columnMONEYTYPE_CODE = base.Columns["MONEYTYPE_CODE"];
                this.columnEXPENSE_BANK = base.Columns["EXPENSE_BANK"];
                this.columnEXPENSE_BRANCH = base.Columns["EXPENSE_BRANCH"];
                this.columnEXPENSE_ACCID = base.Columns["EXPENSE_ACCID"];
                this.columnTOFROM_ACCID = base.Columns["TOFROM_ACCID"];
                this.columnDOCUMENT_NO = base.Columns["DOCUMENT_NO"];
                this.columnPAYOUTNET_AMT = base.Columns["PAYOUTNET_AMT"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCOOP_ID = new global::System.Data.DataColumn("COOP_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOOP_ID);
                this.columnMEMBER_NO = new global::System.Data.DataColumn("MEMBER_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMEMBER_NO);
                this.columnFUNDKEEPTYPE = new global::System.Data.DataColumn("FUNDKEEPTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFUNDKEEPTYPE);
                this.columnAPPROVE_DATE = new global::System.Data.DataColumn("APPROVE_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAPPROVE_DATE);
                this.columnFUND_STATUS = new global::System.Data.DataColumn("FUND_STATUS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFUND_STATUS);
                this.columnRESIGN_DATE = new global::System.Data.DataColumn("RESIGN_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRESIGN_DATE);
                this.columnFUNDBALANCE = new global::System.Data.DataColumn("FUNDBALANCE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFUNDBALANCE);
                this.columnLASTSTM_NO = new global::System.Data.DataColumn("LASTSTM_NO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLASTSTM_NO);
                this.columnLASTACCESS_DATE = new global::System.Data.DataColumn("LASTACCESS_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLASTACCESS_DATE);
                this.columnfullname = new global::System.Data.DataColumn("fullname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfullname);
                this.columnMEMBGROUP_CODE = new global::System.Data.DataColumn("MEMBGROUP_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMEMBGROUP_CODE);
                this.columnSLIPTYPE_CODE = new global::System.Data.DataColumn("SLIPTYPE_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSLIPTYPE_CODE);
                this.columnSLIP_DATE = new global::System.Data.DataColumn("SLIP_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSLIP_DATE);
                this.columnOPERATE_DATE = new global::System.Data.DataColumn("OPERATE_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPERATE_DATE);
                this.columnMONEYTYPE_CODE = new global::System.Data.DataColumn("MONEYTYPE_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMONEYTYPE_CODE);
                this.columnEXPENSE_BANK = new global::System.Data.DataColumn("EXPENSE_BANK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXPENSE_BANK);
                this.columnEXPENSE_BRANCH = new global::System.Data.DataColumn("EXPENSE_BRANCH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXPENSE_BRANCH);
                this.columnEXPENSE_ACCID = new global::System.Data.DataColumn("EXPENSE_ACCID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXPENSE_ACCID);
                this.columnTOFROM_ACCID = new global::System.Data.DataColumn("TOFROM_ACCID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOFROM_ACCID);
                this.columnDOCUMENT_NO = new global::System.Data.DataColumn("DOCUMENT_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOCUMENT_NO);
                this.columnPAYOUTNET_AMT = new global::System.Data.DataColumn("PAYOUTNET_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAYOUTNET_AMT);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCOOP_ID,
                                this.columnMEMBER_NO,
                                this.columnFUNDKEEPTYPE}, true));
                this.columnCOOP_ID.AllowDBNull = false;
                this.columnCOOP_ID.MaxLength = 6;
                this.columnMEMBER_NO.AllowDBNull = false;
                this.columnMEMBER_NO.MaxLength = 8;
                this.columnFUNDKEEPTYPE.AllowDBNull = false;
                this.columnFUNDKEEPTYPE.MaxLength = 2;
                this.columnAPPROVE_DATE.AllowDBNull = false;
                this.columnFUND_STATUS.AllowDBNull = false;
                this.columnFUNDBALANCE.AllowDBNull = false;
                this.columnLASTSTM_NO.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FUNDCOLLMASTERRow NewFUNDCOLLMASTERRow() {
                return ((FUNDCOLLMASTERRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FUNDCOLLMASTERRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(FUNDCOLLMASTERRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FUNDCOLLMASTERRowChanged != null)) {
                    this.FUNDCOLLMASTERRowChanged(this, new FUNDCOLLMASTERRowChangeEvent(((FUNDCOLLMASTERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FUNDCOLLMASTERRowChanging != null)) {
                    this.FUNDCOLLMASTERRowChanging(this, new FUNDCOLLMASTERRowChangeEvent(((FUNDCOLLMASTERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FUNDCOLLMASTERRowDeleted != null)) {
                    this.FUNDCOLLMASTERRowDeleted(this, new FUNDCOLLMASTERRowChangeEvent(((FUNDCOLLMASTERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FUNDCOLLMASTERRowDeleting != null)) {
                    this.FUNDCOLLMASTERRowDeleting(this, new FUNDCOLLMASTERRowChangeEvent(((FUNDCOLLMASTERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveFUNDCOLLMASTERRow(FUNDCOLLMASTERRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FUNDCOLLMASTERDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FUNDCOLLSTATEMENTDataTable : global::System.Data.TypedTableBase<FUNDCOLLSTATEMENTRow> {
            
            private global::System.Data.DataColumn columnCOOP_ID;
            
            private global::System.Data.DataColumn columnMEMBER_NO;
            
            private global::System.Data.DataColumn columnLOANCONTRACT_NO;
            
            private global::System.Data.DataColumn columnOPERATE_DATE;
            
            private global::System.Data.DataColumn columnSEQ_NO;
            
            private global::System.Data.DataColumn columnITEMTYPE_CODE;
            
            private global::System.Data.DataColumn columnITEMPAY_AMT;
            
            private global::System.Data.DataColumn columnBALANCE_FORWARD;
            
            private global::System.Data.DataColumn columnBALANCE;
            
            private global::System.Data.DataColumn columnFUND_STATUS;
            
            private global::System.Data.DataColumn columnENTRY_DATE;
            
            private global::System.Data.DataColumn columnENTRY_ID;
            
            private global::System.Data.DataColumn columnrefslip_no;
            
            private global::System.Data.DataColumn columnOPERATE_FLAG;
            
            private global::System.Data.DataColumn columnSLIPITEM_DESC;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FUNDCOLLSTATEMENTDataTable() {
                this.TableName = "FUNDCOLLSTATEMENT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FUNDCOLLSTATEMENTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected FUNDCOLLSTATEMENTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COOP_IDColumn {
                get {
                    return this.columnCOOP_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MEMBER_NOColumn {
                get {
                    return this.columnMEMBER_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LOANCONTRACT_NOColumn {
                get {
                    return this.columnLOANCONTRACT_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OPERATE_DATEColumn {
                get {
                    return this.columnOPERATE_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SEQ_NOColumn {
                get {
                    return this.columnSEQ_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ITEMTYPE_CODEColumn {
                get {
                    return this.columnITEMTYPE_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ITEMPAY_AMTColumn {
                get {
                    return this.columnITEMPAY_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BALANCE_FORWARDColumn {
                get {
                    return this.columnBALANCE_FORWARD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BALANCEColumn {
                get {
                    return this.columnBALANCE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FUND_STATUSColumn {
                get {
                    return this.columnFUND_STATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ENTRY_DATEColumn {
                get {
                    return this.columnENTRY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ENTRY_IDColumn {
                get {
                    return this.columnENTRY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn refslip_noColumn {
                get {
                    return this.columnrefslip_no;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OPERATE_FLAGColumn {
                get {
                    return this.columnOPERATE_FLAG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SLIPITEM_DESCColumn {
                get {
                    return this.columnSLIPITEM_DESC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FUNDCOLLSTATEMENTRow this[int index] {
                get {
                    return ((FUNDCOLLSTATEMENTRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FUNDCOLLSTATEMENTRowChangeEventHandler FUNDCOLLSTATEMENTRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FUNDCOLLSTATEMENTRowChangeEventHandler FUNDCOLLSTATEMENTRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FUNDCOLLSTATEMENTRowChangeEventHandler FUNDCOLLSTATEMENTRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FUNDCOLLSTATEMENTRowChangeEventHandler FUNDCOLLSTATEMENTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddFUNDCOLLSTATEMENTRow(FUNDCOLLSTATEMENTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FUNDCOLLSTATEMENTRow AddFUNDCOLLSTATEMENTRow(string COOP_ID, string MEMBER_NO, string LOANCONTRACT_NO, System.DateTime OPERATE_DATE, decimal SEQ_NO, string ITEMTYPE_CODE, decimal ITEMPAY_AMT, decimal BALANCE_FORWARD, decimal BALANCE, decimal FUND_STATUS, System.DateTime ENTRY_DATE, string ENTRY_ID, string refslip_no, decimal OPERATE_FLAG, string SLIPITEM_DESC) {
                FUNDCOLLSTATEMENTRow rowFUNDCOLLSTATEMENTRow = ((FUNDCOLLSTATEMENTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        COOP_ID,
                        MEMBER_NO,
                        LOANCONTRACT_NO,
                        OPERATE_DATE,
                        SEQ_NO,
                        ITEMTYPE_CODE,
                        ITEMPAY_AMT,
                        BALANCE_FORWARD,
                        BALANCE,
                        FUND_STATUS,
                        ENTRY_DATE,
                        ENTRY_ID,
                        refslip_no,
                        OPERATE_FLAG,
                        SLIPITEM_DESC};
                rowFUNDCOLLSTATEMENTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFUNDCOLLSTATEMENTRow);
                return rowFUNDCOLLSTATEMENTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FUNDCOLLSTATEMENTRow FindByCOOP_IDMEMBER_NOLOANCONTRACT_NOSEQ_NO(string COOP_ID, string MEMBER_NO, string LOANCONTRACT_NO, decimal SEQ_NO) {
                return ((FUNDCOLLSTATEMENTRow)(this.Rows.Find(new object[] {
                            COOP_ID,
                            MEMBER_NO,
                            LOANCONTRACT_NO,
                            SEQ_NO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                FUNDCOLLSTATEMENTDataTable cln = ((FUNDCOLLSTATEMENTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FUNDCOLLSTATEMENTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCOOP_ID = base.Columns["COOP_ID"];
                this.columnMEMBER_NO = base.Columns["MEMBER_NO"];
                this.columnLOANCONTRACT_NO = base.Columns["LOANCONTRACT_NO"];
                this.columnOPERATE_DATE = base.Columns["OPERATE_DATE"];
                this.columnSEQ_NO = base.Columns["SEQ_NO"];
                this.columnITEMTYPE_CODE = base.Columns["ITEMTYPE_CODE"];
                this.columnITEMPAY_AMT = base.Columns["ITEMPAY_AMT"];
                this.columnBALANCE_FORWARD = base.Columns["BALANCE_FORWARD"];
                this.columnBALANCE = base.Columns["BALANCE"];
                this.columnFUND_STATUS = base.Columns["FUND_STATUS"];
                this.columnENTRY_DATE = base.Columns["ENTRY_DATE"];
                this.columnENTRY_ID = base.Columns["ENTRY_ID"];
                this.columnrefslip_no = base.Columns["refslip_no"];
                this.columnOPERATE_FLAG = base.Columns["OPERATE_FLAG"];
                this.columnSLIPITEM_DESC = base.Columns["SLIPITEM_DESC"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCOOP_ID = new global::System.Data.DataColumn("COOP_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOOP_ID);
                this.columnMEMBER_NO = new global::System.Data.DataColumn("MEMBER_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMEMBER_NO);
                this.columnLOANCONTRACT_NO = new global::System.Data.DataColumn("LOANCONTRACT_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOANCONTRACT_NO);
                this.columnOPERATE_DATE = new global::System.Data.DataColumn("OPERATE_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPERATE_DATE);
                this.columnSEQ_NO = new global::System.Data.DataColumn("SEQ_NO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEQ_NO);
                this.columnITEMTYPE_CODE = new global::System.Data.DataColumn("ITEMTYPE_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEMTYPE_CODE);
                this.columnITEMPAY_AMT = new global::System.Data.DataColumn("ITEMPAY_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEMPAY_AMT);
                this.columnBALANCE_FORWARD = new global::System.Data.DataColumn("BALANCE_FORWARD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBALANCE_FORWARD);
                this.columnBALANCE = new global::System.Data.DataColumn("BALANCE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBALANCE);
                this.columnFUND_STATUS = new global::System.Data.DataColumn("FUND_STATUS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFUND_STATUS);
                this.columnENTRY_DATE = new global::System.Data.DataColumn("ENTRY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENTRY_DATE);
                this.columnENTRY_ID = new global::System.Data.DataColumn("ENTRY_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENTRY_ID);
                this.columnrefslip_no = new global::System.Data.DataColumn("refslip_no", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrefslip_no);
                this.columnOPERATE_FLAG = new global::System.Data.DataColumn("OPERATE_FLAG", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPERATE_FLAG);
                this.columnSLIPITEM_DESC = new global::System.Data.DataColumn("SLIPITEM_DESC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSLIPITEM_DESC);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCOOP_ID,
                                this.columnMEMBER_NO,
                                this.columnLOANCONTRACT_NO,
                                this.columnSEQ_NO}, true));
                this.columnCOOP_ID.AllowDBNull = false;
                this.columnCOOP_ID.MaxLength = 6;
                this.columnMEMBER_NO.AllowDBNull = false;
                this.columnMEMBER_NO.MaxLength = 8;
                this.columnLOANCONTRACT_NO.AllowDBNull = false;
                this.columnLOANCONTRACT_NO.MaxLength = 10;
                this.columnOPERATE_DATE.AllowDBNull = false;
                this.columnSEQ_NO.AllowDBNull = false;
                this.columnITEMTYPE_CODE.AllowDBNull = false;
                this.columnITEMTYPE_CODE.MaxLength = 3;
                this.columnITEMPAY_AMT.AllowDBNull = false;
                this.columnBALANCE_FORWARD.AllowDBNull = false;
                this.columnBALANCE.AllowDBNull = false;
                this.columnFUND_STATUS.AllowDBNull = false;
                this.columnENTRY_DATE.AllowDBNull = false;
                this.columnENTRY_ID.AllowDBNull = false;
                this.columnENTRY_ID.MaxLength = 20;
                this.columnrefslip_no.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FUNDCOLLSTATEMENTRow NewFUNDCOLLSTATEMENTRow() {
                return ((FUNDCOLLSTATEMENTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FUNDCOLLSTATEMENTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(FUNDCOLLSTATEMENTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FUNDCOLLSTATEMENTRowChanged != null)) {
                    this.FUNDCOLLSTATEMENTRowChanged(this, new FUNDCOLLSTATEMENTRowChangeEvent(((FUNDCOLLSTATEMENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FUNDCOLLSTATEMENTRowChanging != null)) {
                    this.FUNDCOLLSTATEMENTRowChanging(this, new FUNDCOLLSTATEMENTRowChangeEvent(((FUNDCOLLSTATEMENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FUNDCOLLSTATEMENTRowDeleted != null)) {
                    this.FUNDCOLLSTATEMENTRowDeleted(this, new FUNDCOLLSTATEMENTRowChangeEvent(((FUNDCOLLSTATEMENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FUNDCOLLSTATEMENTRowDeleting != null)) {
                    this.FUNDCOLLSTATEMENTRowDeleting(this, new FUNDCOLLSTATEMENTRowChangeEvent(((FUNDCOLLSTATEMENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveFUNDCOLLSTATEMENTRow(FUNDCOLLSTATEMENTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FUNDCOLLSTATEMENTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class FUNDCOLLMASTERRow : global::System.Data.DataRow {
            
            private FUNDCOLLMASTERDataTable tableFUNDCOLLMASTER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FUNDCOLLMASTERRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFUNDCOLLMASTER = ((FUNDCOLLMASTERDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string COOP_ID {
                get {
                    return ((string)(this[this.tableFUNDCOLLMASTER.COOP_IDColumn]));
                }
                set {
                    this[this.tableFUNDCOLLMASTER.COOP_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MEMBER_NO {
                get {
                    return ((string)(this[this.tableFUNDCOLLMASTER.MEMBER_NOColumn]));
                }
                set {
                    this[this.tableFUNDCOLLMASTER.MEMBER_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FUNDKEEPTYPE {
                get {
                    return ((string)(this[this.tableFUNDCOLLMASTER.FUNDKEEPTYPEColumn]));
                }
                set {
                    this[this.tableFUNDCOLLMASTER.FUNDKEEPTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime APPROVE_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableFUNDCOLLMASTER.APPROVE_DATEColumn]));
                }
                set {
                    this[this.tableFUNDCOLLMASTER.APPROVE_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FUND_STATUS {
                get {
                    return ((decimal)(this[this.tableFUNDCOLLMASTER.FUND_STATUSColumn]));
                }
                set {
                    this[this.tableFUNDCOLLMASTER.FUND_STATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime RESIGN_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFUNDCOLLMASTER.RESIGN_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RESIGN_DATE\' in table \'FUNDCOLLMASTER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFUNDCOLLMASTER.RESIGN_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FUNDBALANCE {
                get {
                    return ((decimal)(this[this.tableFUNDCOLLMASTER.FUNDBALANCEColumn]));
                }
                set {
                    this[this.tableFUNDCOLLMASTER.FUNDBALANCEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal LASTSTM_NO {
                get {
                    return ((decimal)(this[this.tableFUNDCOLLMASTER.LASTSTM_NOColumn]));
                }
                set {
                    this[this.tableFUNDCOLLMASTER.LASTSTM_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LASTACCESS_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFUNDCOLLMASTER.LASTACCESS_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LASTACCESS_DATE\' in table \'FUNDCOLLMASTER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFUNDCOLLMASTER.LASTACCESS_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string fullname {
                get {
                    try {
                        return ((string)(this[this.tableFUNDCOLLMASTER.fullnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fullname\' in table \'FUNDCOLLMASTER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFUNDCOLLMASTER.fullnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MEMBGROUP_CODE {
                get {
                    try {
                        return ((string)(this[this.tableFUNDCOLLMASTER.MEMBGROUP_CODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MEMBGROUP_CODE\' in table \'FUNDCOLLMASTER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFUNDCOLLMASTER.MEMBGROUP_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SLIPTYPE_CODE {
                get {
                    try {
                        return ((string)(this[this.tableFUNDCOLLMASTER.SLIPTYPE_CODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SLIPTYPE_CODE\' in table \'FUNDCOLLMASTER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFUNDCOLLMASTER.SLIPTYPE_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime SLIP_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFUNDCOLLMASTER.SLIP_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SLIP_DATE\' in table \'FUNDCOLLMASTER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFUNDCOLLMASTER.SLIP_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime OPERATE_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFUNDCOLLMASTER.OPERATE_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OPERATE_DATE\' in table \'FUNDCOLLMASTER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFUNDCOLLMASTER.OPERATE_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MONEYTYPE_CODE {
                get {
                    try {
                        return ((string)(this[this.tableFUNDCOLLMASTER.MONEYTYPE_CODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MONEYTYPE_CODE\' in table \'FUNDCOLLMASTER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFUNDCOLLMASTER.MONEYTYPE_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EXPENSE_BANK {
                get {
                    try {
                        return ((string)(this[this.tableFUNDCOLLMASTER.EXPENSE_BANKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EXPENSE_BANK\' in table \'FUNDCOLLMASTER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFUNDCOLLMASTER.EXPENSE_BANKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EXPENSE_BRANCH {
                get {
                    try {
                        return ((string)(this[this.tableFUNDCOLLMASTER.EXPENSE_BRANCHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EXPENSE_BRANCH\' in table \'FUNDCOLLMASTER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFUNDCOLLMASTER.EXPENSE_BRANCHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EXPENSE_ACCID {
                get {
                    try {
                        return ((string)(this[this.tableFUNDCOLLMASTER.EXPENSE_ACCIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EXPENSE_ACCID\' in table \'FUNDCOLLMASTER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFUNDCOLLMASTER.EXPENSE_ACCIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TOFROM_ACCID {
                get {
                    try {
                        return ((string)(this[this.tableFUNDCOLLMASTER.TOFROM_ACCIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TOFROM_ACCID\' in table \'FUNDCOLLMASTER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFUNDCOLLMASTER.TOFROM_ACCIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DOCUMENT_NO {
                get {
                    try {
                        return ((string)(this[this.tableFUNDCOLLMASTER.DOCUMENT_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DOCUMENT_NO\' in table \'FUNDCOLLMASTER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFUNDCOLLMASTER.DOCUMENT_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PAYOUTNET_AMT {
                get {
                    try {
                        return ((decimal)(this[this.tableFUNDCOLLMASTER.PAYOUTNET_AMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PAYOUTNET_AMT\' in table \'FUNDCOLLMASTER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFUNDCOLLMASTER.PAYOUTNET_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRESIGN_DATENull() {
                return this.IsNull(this.tableFUNDCOLLMASTER.RESIGN_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRESIGN_DATENull() {
                this[this.tableFUNDCOLLMASTER.RESIGN_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLASTACCESS_DATENull() {
                return this.IsNull(this.tableFUNDCOLLMASTER.LASTACCESS_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLASTACCESS_DATENull() {
                this[this.tableFUNDCOLLMASTER.LASTACCESS_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsfullnameNull() {
                return this.IsNull(this.tableFUNDCOLLMASTER.fullnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetfullnameNull() {
                this[this.tableFUNDCOLLMASTER.fullnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMEMBGROUP_CODENull() {
                return this.IsNull(this.tableFUNDCOLLMASTER.MEMBGROUP_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMEMBGROUP_CODENull() {
                this[this.tableFUNDCOLLMASTER.MEMBGROUP_CODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSLIPTYPE_CODENull() {
                return this.IsNull(this.tableFUNDCOLLMASTER.SLIPTYPE_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSLIPTYPE_CODENull() {
                this[this.tableFUNDCOLLMASTER.SLIPTYPE_CODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSLIP_DATENull() {
                return this.IsNull(this.tableFUNDCOLLMASTER.SLIP_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSLIP_DATENull() {
                this[this.tableFUNDCOLLMASTER.SLIP_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOPERATE_DATENull() {
                return this.IsNull(this.tableFUNDCOLLMASTER.OPERATE_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOPERATE_DATENull() {
                this[this.tableFUNDCOLLMASTER.OPERATE_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMONEYTYPE_CODENull() {
                return this.IsNull(this.tableFUNDCOLLMASTER.MONEYTYPE_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMONEYTYPE_CODENull() {
                this[this.tableFUNDCOLLMASTER.MONEYTYPE_CODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEXPENSE_BANKNull() {
                return this.IsNull(this.tableFUNDCOLLMASTER.EXPENSE_BANKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEXPENSE_BANKNull() {
                this[this.tableFUNDCOLLMASTER.EXPENSE_BANKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEXPENSE_BRANCHNull() {
                return this.IsNull(this.tableFUNDCOLLMASTER.EXPENSE_BRANCHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEXPENSE_BRANCHNull() {
                this[this.tableFUNDCOLLMASTER.EXPENSE_BRANCHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEXPENSE_ACCIDNull() {
                return this.IsNull(this.tableFUNDCOLLMASTER.EXPENSE_ACCIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEXPENSE_ACCIDNull() {
                this[this.tableFUNDCOLLMASTER.EXPENSE_ACCIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTOFROM_ACCIDNull() {
                return this.IsNull(this.tableFUNDCOLLMASTER.TOFROM_ACCIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTOFROM_ACCIDNull() {
                this[this.tableFUNDCOLLMASTER.TOFROM_ACCIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDOCUMENT_NONull() {
                return this.IsNull(this.tableFUNDCOLLMASTER.DOCUMENT_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDOCUMENT_NONull() {
                this[this.tableFUNDCOLLMASTER.DOCUMENT_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPAYOUTNET_AMTNull() {
                return this.IsNull(this.tableFUNDCOLLMASTER.PAYOUTNET_AMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPAYOUTNET_AMTNull() {
                this[this.tableFUNDCOLLMASTER.PAYOUTNET_AMTColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class FUNDCOLLSTATEMENTRow : global::System.Data.DataRow {
            
            private FUNDCOLLSTATEMENTDataTable tableFUNDCOLLSTATEMENT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FUNDCOLLSTATEMENTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFUNDCOLLSTATEMENT = ((FUNDCOLLSTATEMENTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string COOP_ID {
                get {
                    return ((string)(this[this.tableFUNDCOLLSTATEMENT.COOP_IDColumn]));
                }
                set {
                    this[this.tableFUNDCOLLSTATEMENT.COOP_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MEMBER_NO {
                get {
                    return ((string)(this[this.tableFUNDCOLLSTATEMENT.MEMBER_NOColumn]));
                }
                set {
                    this[this.tableFUNDCOLLSTATEMENT.MEMBER_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LOANCONTRACT_NO {
                get {
                    return ((string)(this[this.tableFUNDCOLLSTATEMENT.LOANCONTRACT_NOColumn]));
                }
                set {
                    this[this.tableFUNDCOLLSTATEMENT.LOANCONTRACT_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime OPERATE_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableFUNDCOLLSTATEMENT.OPERATE_DATEColumn]));
                }
                set {
                    this[this.tableFUNDCOLLSTATEMENT.OPERATE_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SEQ_NO {
                get {
                    return ((decimal)(this[this.tableFUNDCOLLSTATEMENT.SEQ_NOColumn]));
                }
                set {
                    this[this.tableFUNDCOLLSTATEMENT.SEQ_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ITEMTYPE_CODE {
                get {
                    return ((string)(this[this.tableFUNDCOLLSTATEMENT.ITEMTYPE_CODEColumn]));
                }
                set {
                    this[this.tableFUNDCOLLSTATEMENT.ITEMTYPE_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ITEMPAY_AMT {
                get {
                    return ((decimal)(this[this.tableFUNDCOLLSTATEMENT.ITEMPAY_AMTColumn]));
                }
                set {
                    this[this.tableFUNDCOLLSTATEMENT.ITEMPAY_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal BALANCE_FORWARD {
                get {
                    return ((decimal)(this[this.tableFUNDCOLLSTATEMENT.BALANCE_FORWARDColumn]));
                }
                set {
                    this[this.tableFUNDCOLLSTATEMENT.BALANCE_FORWARDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal BALANCE {
                get {
                    return ((decimal)(this[this.tableFUNDCOLLSTATEMENT.BALANCEColumn]));
                }
                set {
                    this[this.tableFUNDCOLLSTATEMENT.BALANCEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FUND_STATUS {
                get {
                    return ((decimal)(this[this.tableFUNDCOLLSTATEMENT.FUND_STATUSColumn]));
                }
                set {
                    this[this.tableFUNDCOLLSTATEMENT.FUND_STATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ENTRY_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableFUNDCOLLSTATEMENT.ENTRY_DATEColumn]));
                }
                set {
                    this[this.tableFUNDCOLLSTATEMENT.ENTRY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ENTRY_ID {
                get {
                    return ((string)(this[this.tableFUNDCOLLSTATEMENT.ENTRY_IDColumn]));
                }
                set {
                    this[this.tableFUNDCOLLSTATEMENT.ENTRY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string refslip_no {
                get {
                    try {
                        return ((string)(this[this.tableFUNDCOLLSTATEMENT.refslip_noColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'refslip_no\' in table \'FUNDCOLLSTATEMENT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFUNDCOLLSTATEMENT.refslip_noColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal OPERATE_FLAG {
                get {
                    try {
                        return ((decimal)(this[this.tableFUNDCOLLSTATEMENT.OPERATE_FLAGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OPERATE_FLAG\' in table \'FUNDCOLLSTATEMENT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFUNDCOLLSTATEMENT.OPERATE_FLAGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SLIPITEM_DESC {
                get {
                    try {
                        return ((string)(this[this.tableFUNDCOLLSTATEMENT.SLIPITEM_DESCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SLIPITEM_DESC\' in table \'FUNDCOLLSTATEMENT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFUNDCOLLSTATEMENT.SLIPITEM_DESCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isrefslip_noNull() {
                return this.IsNull(this.tableFUNDCOLLSTATEMENT.refslip_noColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setrefslip_noNull() {
                this[this.tableFUNDCOLLSTATEMENT.refslip_noColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOPERATE_FLAGNull() {
                return this.IsNull(this.tableFUNDCOLLSTATEMENT.OPERATE_FLAGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOPERATE_FLAGNull() {
                this[this.tableFUNDCOLLSTATEMENT.OPERATE_FLAGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSLIPITEM_DESCNull() {
                return this.IsNull(this.tableFUNDCOLLSTATEMENT.SLIPITEM_DESCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSLIPITEM_DESCNull() {
                this[this.tableFUNDCOLLSTATEMENT.SLIPITEM_DESCColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class FUNDCOLLMASTERRowChangeEvent : global::System.EventArgs {
            
            private FUNDCOLLMASTERRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FUNDCOLLMASTERRowChangeEvent(FUNDCOLLMASTERRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FUNDCOLLMASTERRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class FUNDCOLLSTATEMENTRowChangeEvent : global::System.EventArgs {
            
            private FUNDCOLLSTATEMENTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FUNDCOLLSTATEMENTRowChangeEvent(FUNDCOLLSTATEMENTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FUNDCOLLSTATEMENTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Saving.Applications.fund.ws_sl_fundcoll_payment_ctrl.DataSet1TableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class FUNDCOLLMASTERTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public FUNDCOLLMASTERTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "FUNDCOLLMASTER";
            tableMapping.ColumnMappings.Add("COOP_ID", "COOP_ID");
            tableMapping.ColumnMappings.Add("MEMBER_NO", "MEMBER_NO");
            tableMapping.ColumnMappings.Add("FUNDKEEPTYPE", "FUNDKEEPTYPE");
            tableMapping.ColumnMappings.Add("APPROVE_DATE", "APPROVE_DATE");
            tableMapping.ColumnMappings.Add("FUND_STATUS", "FUND_STATUS");
            tableMapping.ColumnMappings.Add("RESIGN_DATE", "RESIGN_DATE");
            tableMapping.ColumnMappings.Add("FUNDBALANCE", "FUNDBALANCE");
            tableMapping.ColumnMappings.Add("LASTSTM_NO", "LASTSTM_NO");
            tableMapping.ColumnMappings.Add("LASTACCESS_DATE", "LASTACCESS_DATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [fundcollmaster] WHERE (([COOP_ID] = @Original_COOP_ID) AND ([MEMBER_" +
                "NO] = @Original_MEMBER_NO) AND ([FUNDKEEPTYPE] = @Original_FUNDKEEPTYPE))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COOP_ID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COOP_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MEMBER_NO", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEMBER_NO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FUNDKEEPTYPE", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FUNDKEEPTYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [fundcollmaster] ([COOP_ID], [MEMBER_NO], [FUNDKEEPTYPE], [APPROVE_DATE], [FUND_STATUS], [RESIGN_DATE], [FUNDBALANCE], [LASTSTM_NO], [LASTACCESS_DATE]) VALUES (@COOP_ID, @MEMBER_NO, @FUNDKEEPTYPE, @APPROVE_DATE, @FUND_STATUS, @RESIGN_DATE, @FUNDBALANCE, @LASTSTM_NO, @LASTACCESS_DATE)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COOP_ID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COOP_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MEMBER_NO", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEMBER_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FUNDKEEPTYPE", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FUNDKEEPTYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@APPROVE_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "APPROVE_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FUND_STATUS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 1, 0, "FUND_STATUS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RESIGN_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RESIGN_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FUNDBALANCE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 15, 2, "FUNDBALANCE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LASTSTM_NO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 4, 0, "LASTSTM_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LASTACCESS_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LASTACCESS_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [fundcollmaster] SET [COOP_ID] = @COOP_ID, [MEMBER_NO] = @MEMBER_NO, [FUNDKEEPTYPE] = @FUNDKEEPTYPE, [APPROVE_DATE] = @APPROVE_DATE, [FUND_STATUS] = @FUND_STATUS, [RESIGN_DATE] = @RESIGN_DATE, [FUNDBALANCE] = @FUNDBALANCE, [LASTSTM_NO] = @LASTSTM_NO, [LASTACCESS_DATE] = @LASTACCESS_DATE WHERE (([COOP_ID] = @Original_COOP_ID) AND ([MEMBER_NO] = @Original_MEMBER_NO) AND ([FUNDKEEPTYPE] = @Original_FUNDKEEPTYPE))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COOP_ID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COOP_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MEMBER_NO", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEMBER_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FUNDKEEPTYPE", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FUNDKEEPTYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@APPROVE_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "APPROVE_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FUND_STATUS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 1, 0, "FUND_STATUS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RESIGN_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RESIGN_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FUNDBALANCE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 15, 2, "FUNDBALANCE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LASTSTM_NO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 4, 0, "LASTSTM_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LASTACCESS_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LASTACCESS_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COOP_ID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COOP_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MEMBER_NO", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEMBER_NO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FUNDKEEPTYPE", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FUNDKEEPTYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["iscoslpConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "select * from fundcollmaster";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.FUNDCOLLMASTERDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.FUNDCOLLMASTERDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.FUNDCOLLMASTERDataTable dataTable = new DataSet1.FUNDCOLLMASTERDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.FUNDCOLLMASTERDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "FUNDCOLLMASTER");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_COOP_ID, string Original_MEMBER_NO, string Original_FUNDKEEPTYPE) {
            if ((Original_COOP_ID == null)) {
                throw new global::System.ArgumentNullException("Original_COOP_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_COOP_ID));
            }
            if ((Original_MEMBER_NO == null)) {
                throw new global::System.ArgumentNullException("Original_MEMBER_NO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_MEMBER_NO));
            }
            if ((Original_FUNDKEEPTYPE == null)) {
                throw new global::System.ArgumentNullException("Original_FUNDKEEPTYPE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_FUNDKEEPTYPE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string COOP_ID, string MEMBER_NO, string FUNDKEEPTYPE, System.DateTime APPROVE_DATE, decimal FUND_STATUS, global::System.Nullable<global::System.DateTime> RESIGN_DATE, decimal FUNDBALANCE, decimal LASTSTM_NO, global::System.Nullable<global::System.DateTime> LASTACCESS_DATE) {
            if ((COOP_ID == null)) {
                throw new global::System.ArgumentNullException("COOP_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(COOP_ID));
            }
            if ((MEMBER_NO == null)) {
                throw new global::System.ArgumentNullException("MEMBER_NO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(MEMBER_NO));
            }
            if ((FUNDKEEPTYPE == null)) {
                throw new global::System.ArgumentNullException("FUNDKEEPTYPE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(FUNDKEEPTYPE));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(APPROVE_DATE));
            this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(FUND_STATUS));
            if ((RESIGN_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(RESIGN_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(FUNDBALANCE));
            this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(LASTSTM_NO));
            if ((LASTACCESS_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(LASTACCESS_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string COOP_ID, string MEMBER_NO, string FUNDKEEPTYPE, System.DateTime APPROVE_DATE, decimal FUND_STATUS, global::System.Nullable<global::System.DateTime> RESIGN_DATE, decimal FUNDBALANCE, decimal LASTSTM_NO, global::System.Nullable<global::System.DateTime> LASTACCESS_DATE, string Original_COOP_ID, string Original_MEMBER_NO, string Original_FUNDKEEPTYPE) {
            if ((COOP_ID == null)) {
                throw new global::System.ArgumentNullException("COOP_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(COOP_ID));
            }
            if ((MEMBER_NO == null)) {
                throw new global::System.ArgumentNullException("MEMBER_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(MEMBER_NO));
            }
            if ((FUNDKEEPTYPE == null)) {
                throw new global::System.ArgumentNullException("FUNDKEEPTYPE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(FUNDKEEPTYPE));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(APPROVE_DATE));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(FUND_STATUS));
            if ((RESIGN_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(RESIGN_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(FUNDBALANCE));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(LASTSTM_NO));
            if ((LASTACCESS_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(LASTACCESS_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_COOP_ID == null)) {
                throw new global::System.ArgumentNullException("Original_COOP_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_COOP_ID));
            }
            if ((Original_MEMBER_NO == null)) {
                throw new global::System.ArgumentNullException("Original_MEMBER_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_MEMBER_NO));
            }
            if ((Original_FUNDKEEPTYPE == null)) {
                throw new global::System.ArgumentNullException("Original_FUNDKEEPTYPE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_FUNDKEEPTYPE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.DateTime APPROVE_DATE, decimal FUND_STATUS, global::System.Nullable<global::System.DateTime> RESIGN_DATE, decimal FUNDBALANCE, decimal LASTSTM_NO, global::System.Nullable<global::System.DateTime> LASTACCESS_DATE, string Original_COOP_ID, string Original_MEMBER_NO, string Original_FUNDKEEPTYPE) {
            return this.Update(Original_COOP_ID, Original_MEMBER_NO, Original_FUNDKEEPTYPE, APPROVE_DATE, FUND_STATUS, RESIGN_DATE, FUNDBALANCE, LASTSTM_NO, LASTACCESS_DATE, Original_COOP_ID, Original_MEMBER_NO, Original_FUNDKEEPTYPE);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class FUNDCOLLSTATEMENTTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public FUNDCOLLSTATEMENTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "FUNDCOLLSTATEMENT";
            tableMapping.ColumnMappings.Add("COOP_ID", "COOP_ID");
            tableMapping.ColumnMappings.Add("MEMBER_NO", "MEMBER_NO");
            tableMapping.ColumnMappings.Add("LOANCONTRACT_NO", "LOANCONTRACT_NO");
            tableMapping.ColumnMappings.Add("OPERATE_DATE", "OPERATE_DATE");
            tableMapping.ColumnMappings.Add("SEQ_NO", "SEQ_NO");
            tableMapping.ColumnMappings.Add("ITEMTYPE_CODE", "ITEMTYPE_CODE");
            tableMapping.ColumnMappings.Add("ITEMPAY_AMT", "ITEMPAY_AMT");
            tableMapping.ColumnMappings.Add("BALANCE_FORWARD", "BALANCE_FORWARD");
            tableMapping.ColumnMappings.Add("BALANCE", "BALANCE");
            tableMapping.ColumnMappings.Add("FUND_STATUS", "FUND_STATUS");
            tableMapping.ColumnMappings.Add("ENTRY_DATE", "ENTRY_DATE");
            tableMapping.ColumnMappings.Add("ENTRY_ID", "ENTRY_ID");
            tableMapping.ColumnMappings.Add("refslip_no", "refslip_no");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [fundcollstatement] WHERE (([COOP_ID] = @Original_COOP_ID) AND ([MEMB" +
                "ER_NO] = @Original_MEMBER_NO) AND ([LOANCONTRACT_NO] = @Original_LOANCONTRACT_NO" +
                ") AND ([SEQ_NO] = @Original_SEQ_NO))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COOP_ID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COOP_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MEMBER_NO", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEMBER_NO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LOANCONTRACT_NO", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOANCONTRACT_NO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEQ_NO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 3, 0, "SEQ_NO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [fundcollstatement] ([COOP_ID], [MEMBER_NO], [LOANCONTRACT_NO], [OPERATE_DATE], [SEQ_NO], [ITEMTYPE_CODE], [ITEMPAY_AMT], [BALANCE_FORWARD], [BALANCE], [FUND_STATUS], [ENTRY_DATE], [ENTRY_ID], [refslip_no]) VALUES (@COOP_ID, @MEMBER_NO, @LOANCONTRACT_NO, @OPERATE_DATE, @SEQ_NO, @ITEMTYPE_CODE, @ITEMPAY_AMT, @BALANCE_FORWARD, @BALANCE, @FUND_STATUS, @ENTRY_DATE, @ENTRY_ID, @refslip_no)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COOP_ID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COOP_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MEMBER_NO", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEMBER_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOANCONTRACT_NO", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOANCONTRACT_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OPERATE_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPERATE_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEQ_NO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 3, 0, "SEQ_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ITEMTYPE_CODE", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ITEMTYPE_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ITEMPAY_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 15, 2, "ITEMPAY_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BALANCE_FORWARD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 15, 2, "BALANCE_FORWARD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BALANCE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 15, 2, "BALANCE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FUND_STATUS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 1, 0, "FUND_STATUS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ENTRY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ENTRY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ENTRY_ID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ENTRY_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@refslip_no", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "refslip_no", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [fundcollstatement] SET [COOP_ID] = @COOP_ID, [MEMBER_NO] = @MEMBER_NO, [LOANCONTRACT_NO] = @LOANCONTRACT_NO, [OPERATE_DATE] = @OPERATE_DATE, [SEQ_NO] = @SEQ_NO, [ITEMTYPE_CODE] = @ITEMTYPE_CODE, [ITEMPAY_AMT] = @ITEMPAY_AMT, [BALANCE_FORWARD] = @BALANCE_FORWARD, [BALANCE] = @BALANCE, [FUND_STATUS] = @FUND_STATUS, [ENTRY_DATE] = @ENTRY_DATE, [ENTRY_ID] = @ENTRY_ID, [refslip_no] = @refslip_no WHERE (([COOP_ID] = @Original_COOP_ID) AND ([MEMBER_NO] = @Original_MEMBER_NO) AND ([LOANCONTRACT_NO] = @Original_LOANCONTRACT_NO) AND ([SEQ_NO] = @Original_SEQ_NO))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COOP_ID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COOP_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MEMBER_NO", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEMBER_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOANCONTRACT_NO", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOANCONTRACT_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OPERATE_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPERATE_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEQ_NO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 3, 0, "SEQ_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ITEMTYPE_CODE", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ITEMTYPE_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ITEMPAY_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 15, 2, "ITEMPAY_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BALANCE_FORWARD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 15, 2, "BALANCE_FORWARD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BALANCE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 15, 2, "BALANCE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FUND_STATUS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 1, 0, "FUND_STATUS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ENTRY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ENTRY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ENTRY_ID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ENTRY_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@refslip_no", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "refslip_no", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COOP_ID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COOP_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MEMBER_NO", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEMBER_NO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LOANCONTRACT_NO", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOANCONTRACT_NO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEQ_NO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 3, 0, "SEQ_NO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["iscoslpConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT COOP_ID, MEMBER_NO, LOANCONTRACT_NO, OPERATE_DATE, SEQ_NO, ITEMTYPE_CODE, " +
                "ITEMPAY_AMT, BALANCE_FORWARD, BALANCE, FUND_STATUS, ENTRY_DATE, ENTRY_ID, refsli" +
                "p_no FROM FUNDCOLLSTATEMENT";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.FUNDCOLLSTATEMENTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.FUNDCOLLSTATEMENTDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.FUNDCOLLSTATEMENTDataTable dataTable = new DataSet1.FUNDCOLLSTATEMENTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.FUNDCOLLSTATEMENTDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "FUNDCOLLSTATEMENT");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_COOP_ID, string Original_MEMBER_NO, string Original_LOANCONTRACT_NO, decimal Original_SEQ_NO) {
            if ((Original_COOP_ID == null)) {
                throw new global::System.ArgumentNullException("Original_COOP_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_COOP_ID));
            }
            if ((Original_MEMBER_NO == null)) {
                throw new global::System.ArgumentNullException("Original_MEMBER_NO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_MEMBER_NO));
            }
            if ((Original_LOANCONTRACT_NO == null)) {
                throw new global::System.ArgumentNullException("Original_LOANCONTRACT_NO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_LOANCONTRACT_NO));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(Original_SEQ_NO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string COOP_ID, string MEMBER_NO, string LOANCONTRACT_NO, System.DateTime OPERATE_DATE, decimal SEQ_NO, string ITEMTYPE_CODE, decimal ITEMPAY_AMT, decimal BALANCE_FORWARD, decimal BALANCE, decimal FUND_STATUS, System.DateTime ENTRY_DATE, string ENTRY_ID, string refslip_no) {
            if ((COOP_ID == null)) {
                throw new global::System.ArgumentNullException("COOP_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(COOP_ID));
            }
            if ((MEMBER_NO == null)) {
                throw new global::System.ArgumentNullException("MEMBER_NO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(MEMBER_NO));
            }
            if ((LOANCONTRACT_NO == null)) {
                throw new global::System.ArgumentNullException("LOANCONTRACT_NO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(LOANCONTRACT_NO));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(OPERATE_DATE));
            this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(SEQ_NO));
            if ((ITEMTYPE_CODE == null)) {
                throw new global::System.ArgumentNullException("ITEMTYPE_CODE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(ITEMTYPE_CODE));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(ITEMPAY_AMT));
            this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(BALANCE_FORWARD));
            this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(BALANCE));
            this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(FUND_STATUS));
            this.Adapter.InsertCommand.Parameters[10].Value = ((System.DateTime)(ENTRY_DATE));
            if ((ENTRY_ID == null)) {
                throw new global::System.ArgumentNullException("ENTRY_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(ENTRY_ID));
            }
            if ((refslip_no == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(refslip_no));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string COOP_ID, 
                    string MEMBER_NO, 
                    string LOANCONTRACT_NO, 
                    System.DateTime OPERATE_DATE, 
                    decimal SEQ_NO, 
                    string ITEMTYPE_CODE, 
                    decimal ITEMPAY_AMT, 
                    decimal BALANCE_FORWARD, 
                    decimal BALANCE, 
                    decimal FUND_STATUS, 
                    System.DateTime ENTRY_DATE, 
                    string ENTRY_ID, 
                    string refslip_no, 
                    string Original_COOP_ID, 
                    string Original_MEMBER_NO, 
                    string Original_LOANCONTRACT_NO, 
                    decimal Original_SEQ_NO) {
            if ((COOP_ID == null)) {
                throw new global::System.ArgumentNullException("COOP_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(COOP_ID));
            }
            if ((MEMBER_NO == null)) {
                throw new global::System.ArgumentNullException("MEMBER_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(MEMBER_NO));
            }
            if ((LOANCONTRACT_NO == null)) {
                throw new global::System.ArgumentNullException("LOANCONTRACT_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(LOANCONTRACT_NO));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(OPERATE_DATE));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(SEQ_NO));
            if ((ITEMTYPE_CODE == null)) {
                throw new global::System.ArgumentNullException("ITEMTYPE_CODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(ITEMTYPE_CODE));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(ITEMPAY_AMT));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(BALANCE_FORWARD));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(BALANCE));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(FUND_STATUS));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(ENTRY_DATE));
            if ((ENTRY_ID == null)) {
                throw new global::System.ArgumentNullException("ENTRY_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(ENTRY_ID));
            }
            if ((refslip_no == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(refslip_no));
            }
            if ((Original_COOP_ID == null)) {
                throw new global::System.ArgumentNullException("Original_COOP_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_COOP_ID));
            }
            if ((Original_MEMBER_NO == null)) {
                throw new global::System.ArgumentNullException("Original_MEMBER_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_MEMBER_NO));
            }
            if ((Original_LOANCONTRACT_NO == null)) {
                throw new global::System.ArgumentNullException("Original_LOANCONTRACT_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_LOANCONTRACT_NO));
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(Original_SEQ_NO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.DateTime OPERATE_DATE, string ITEMTYPE_CODE, decimal ITEMPAY_AMT, decimal BALANCE_FORWARD, decimal BALANCE, decimal FUND_STATUS, System.DateTime ENTRY_DATE, string ENTRY_ID, string refslip_no, string Original_COOP_ID, string Original_MEMBER_NO, string Original_LOANCONTRACT_NO, decimal Original_SEQ_NO) {
            return this.Update(Original_COOP_ID, Original_MEMBER_NO, Original_LOANCONTRACT_NO, OPERATE_DATE, Original_SEQ_NO, ITEMTYPE_CODE, ITEMPAY_AMT, BALANCE_FORWARD, BALANCE, FUND_STATUS, ENTRY_DATE, ENTRY_ID, refslip_no, Original_COOP_ID, Original_MEMBER_NO, Original_LOANCONTRACT_NO, Original_SEQ_NO);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private FUNDCOLLMASTERTableAdapter _fUNDCOLLMASTERTableAdapter;
        
        private FUNDCOLLSTATEMENTTableAdapter _fUNDCOLLSTATEMENTTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public FUNDCOLLMASTERTableAdapter FUNDCOLLMASTERTableAdapter {
            get {
                return this._fUNDCOLLMASTERTableAdapter;
            }
            set {
                this._fUNDCOLLMASTERTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public FUNDCOLLSTATEMENTTableAdapter FUNDCOLLSTATEMENTTableAdapter {
            get {
                return this._fUNDCOLLSTATEMENTTableAdapter;
            }
            set {
                this._fUNDCOLLSTATEMENTTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._fUNDCOLLMASTERTableAdapter != null) 
                            && (this._fUNDCOLLMASTERTableAdapter.Connection != null))) {
                    return this._fUNDCOLLMASTERTableAdapter.Connection;
                }
                if (((this._fUNDCOLLSTATEMENTTableAdapter != null) 
                            && (this._fUNDCOLLSTATEMENTTableAdapter.Connection != null))) {
                    return this._fUNDCOLLSTATEMENTTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._fUNDCOLLMASTERTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._fUNDCOLLSTATEMENTTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(DataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._fUNDCOLLSTATEMENTTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.FUNDCOLLSTATEMENT.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._fUNDCOLLSTATEMENTTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._fUNDCOLLMASTERTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.FUNDCOLLMASTER.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._fUNDCOLLMASTERTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(DataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._fUNDCOLLSTATEMENTTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.FUNDCOLLSTATEMENT.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._fUNDCOLLSTATEMENTTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._fUNDCOLLMASTERTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.FUNDCOLLMASTER.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._fUNDCOLLMASTERTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(DataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._fUNDCOLLMASTERTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.FUNDCOLLMASTER.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._fUNDCOLLMASTERTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._fUNDCOLLSTATEMENTTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.FUNDCOLLSTATEMENT.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._fUNDCOLLSTATEMENTTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(DataSet1 dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._fUNDCOLLMASTERTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._fUNDCOLLMASTERTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._fUNDCOLLSTATEMENTTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._fUNDCOLLSTATEMENTTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._fUNDCOLLMASTERTableAdapter != null)) {
                    revertConnections.Add(this._fUNDCOLLMASTERTableAdapter, this._fUNDCOLLMASTERTableAdapter.Connection);
                    this._fUNDCOLLMASTERTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._fUNDCOLLMASTERTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._fUNDCOLLMASTERTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._fUNDCOLLMASTERTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._fUNDCOLLMASTERTableAdapter.Adapter);
                    }
                }
                if ((this._fUNDCOLLSTATEMENTTableAdapter != null)) {
                    revertConnections.Add(this._fUNDCOLLSTATEMENTTableAdapter, this._fUNDCOLLSTATEMENTTableAdapter.Connection);
                    this._fUNDCOLLSTATEMENTTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._fUNDCOLLSTATEMENTTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._fUNDCOLLSTATEMENTTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._fUNDCOLLSTATEMENTTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._fUNDCOLLSTATEMENTTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._fUNDCOLLMASTERTableAdapter != null)) {
                    this._fUNDCOLLMASTERTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._fUNDCOLLMASTERTableAdapter]));
                    this._fUNDCOLLMASTERTableAdapter.Transaction = null;
                }
                if ((this._fUNDCOLLSTATEMENTTableAdapter != null)) {
                    this._fUNDCOLLSTATEMENTTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._fUNDCOLLSTATEMENTTableAdapter]));
                    this._fUNDCOLLSTATEMENTTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591